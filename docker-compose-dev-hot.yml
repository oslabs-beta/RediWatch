version: "3"
services:
  db:
    image: postgres
    restart: always
    container_name: my_postgres_db
    environment:
      POSTGRES_USER: nenunvau
      POSTGRES_PASSWORD: 5sN2jTxq2AbK2OkLRtqJDzfu_I4NFeDG
      POSTGRES_DB: RediWatch
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./user_database.sql:/docker-entrypoint-initdb.d/user_database.sql
    networks:
      - my_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nenunvau -d RediWatch"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
    - "5432:5432"

  server:
    image: rediwatch
    container_name: "rediwatch-backend"
    volumes:
      - .:/usr/src/app
      - node_modules:/usr/src/app/node_modules
    ports:
      - 3001:3001
    depends_on: 
      - redis
    environment: 
      - Redis_Url=redis://redis:6379
      - DATABASE_URL
    command: npm run dev:server
    env_file:
      - .env


  client:
    image: rediwatch
    container_name: "rediwatch-frontend"
    volumes:
      - .:/usr/src/app
      - node_modules:/usr/src/app/node_modules
    ports:
      - 8080:8080
    depends_on:
      - redis
    command: npm run dev:client

  redis:
    image: redis
    ports: 
      - 6379:6379
    command: redis-server
    depends_on:
      - db

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_INSTALL_PLUGINS=redis-datasource
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    depends_on:
      - redis

volumes:
  node_modules:
  grafana-storage:
  db-data:

networks:
  my_network:
    driver: bridge